version: '3.7'
services:

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.114.0
    #image: otel/opentelemetry-collector-contrib:latest
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus metrics endpoint
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55679:55679" # zpages extension
    depends_on:
      - loki
      - jaeger-all-in-one
      - zipkin-all-in-one
      - tempo
    networks:
      - rede_mckf_net

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    restart: always
    ports:
      - "4317"  # otlp grpc
      - "3200"  # tempo as grafana datasource
    networks:
      - rede_mckf_net

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"
    networks:
      - rede_mckf_net

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector
    networks:
      - rede_mckf_net

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      #- ./docker/grafana/grafana-storage:/var/lib/grafana
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - jaeger-all-in-one
      - zipkin-all-in-one
      - tempo
    networks:
      - rede_mckf_net

  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "4317"
    networks:
      - rede_mckf_net

  zipkin-all-in-one:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - rede_mckf_net

  # Mock server using Mock-UI
  wiremock:
    image: holomekc/wiremock-gui:latest
    ports:
      - "9191:8080"
    volumes:
      - ./docker/wiremock/mappings:/home/wiremock/mappings
      - ./docker/wiremock/files:/home/wiremock/__files
    #command: ["--verbose --local-response-templating --port=8080 --local-response-templating"]
    networks:
      - rede_mckf_net

  localstack:
    container_name: localstack
    image: localstack/localstack:3.8.1
    networks:
      - rede_mckf_net
    environment:
      - SERVICES=secretmanager,sns,sqs
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID=key
      - AWS_SECRET_ACCESS_KEY=secret101
      - AWS_DEFAULT_REGION=sa-east-1
      - USE_SINGLE_REGION=true
      - DISABLE_CORS_ALLOWED_ORIGIN=app://
    ports:
      - "4566-4599:4566-4599"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/aws/create_resources.sh:/etc/localstack/init/ready.d//docker/aws/create_resources.sh

  cep_api_bff:
    container_name: cep-api-app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ~/.m2:/root/.m2
    ports:
      - "8080:8080"
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1024m
      - AWS_REGION=sa-east-1
      - AWS_SECRET_ACCESS_KEY=secret101
      - AWS_ACCESS_KEY_ID=key
      - SPRING_CLOUD_AWS_ENDPOINT=http://localstack:4566
      - MANAGEMENT_OTLP_TRACING_ENDPOINT=http://collector:4318/v1/traces
      - MANAGEMENT_OTLP_METRICS_EXPORT_URL=http://collector:4318/v1/metrics
      - MANAGEMENT_OTLP_LOGGING_ENDPOINT=http://collector:4318/v1/log
    restart: always
    depends_on:
      - collector
      - localstack
      - wiremock
    networks:
      - rede_mckf_net
networks:
  rede_mckf_net:
    driver: bridge